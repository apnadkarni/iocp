name: Visual C++

on:
  workflow_dispatch:
    inputs:
      tcltag:  # User input for selecting Tcl tag
        description: 'Tcl version'
        required: true
        type: choice
        options:
          - '["main"]'
          - '["core-8-6-13"]'
          - '["core-8-6-13", "main"]'
        default: '["core-8-6-13", "main"]'
      osver:  # User input for selecting OS
        description: 'OS version'
        required: true
        type: choice
        options:
          - '["windows-latest"]'
          - '["windows-2022"]'
          - '["windows-2019"]'
          - '["windows-2019", "windows-2022"]'
        default: '["windows-latest"]'
      dotest: # Whether tests should be run
        description: 'Run tests as well'
        required: false
        default: true
        type: boolean

jobs:
  build:
    strategy:
      matrix:
        os: ${{ fromJSON(github.event.inputs.osver) }}
        tclbranch: ${{ fromJSON(github.event.inputs.tcltag) }}
        arch:
          - x64
          - x86
    runs-on: ${{ matrix.os }}
    env:
      TCLSUBDIR: ${{ matrix.arch }}-${{ matrix.tclbranch }}
      TCLDIR: C:/tcl/msvc/${{ matrix.arch }}-${{ matrix.tclbranch }}
    steps:
    # Note msvc defaults to 64-bit
    - name: Init MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}

    - name: Checkout iocp
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Cache Tcl build
      id: tcl-msvc-cache
      uses: actions/cache@v4
      with:
        path: ${{ env.TCLDIR }}
        key: ${{ runner.os }}-tcl-msvc-${{ env.TCLSUBDIR }}

    - name: Checkout Tcl
      if: steps.tcl-msvc-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: tcltk/tcl
        ref: ${{ matrix.tclbranch }}
        path: tcl-${{ matrix.tclbranch }}

    - name: Build Tcl
      if: steps.tcl-msvc-cache.outputs.cache-hit != 'true'
      working-directory: tcl-${{ matrix.tclbranch }}/win
      shell: cmd
      run: |
        nmake /f makefile.vc INSTALLDIR=${{ env.TCLDIR }}
        nmake /f makefile.vc INSTALLDIR=${{ env.TCLDIR }} install

    - name: Make
      shell: cmd
      run: |
        cd win
        nmake /f makefile.vc INSTALLDIR=${{ env.TCLDIR }} realclean
        nmake /f makefile.vc INSTALLDIR=${{ env.TCLDIR }}

    - name: Test
      if: github.event.inputs.dotest
      shell: cmd
      run: |
        cd win
        nmake /f makefile.vc INSTALLDIR=${{ env.TCLDIR }} test
      env:
        ERROR_ON_FAILURES: 1


